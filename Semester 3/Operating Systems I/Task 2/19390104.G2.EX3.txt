Εργαστήριο ΛΣ 1 / Ασκηση 3 / 2020-21

Ονοματεπώνυμο: Κούμανης Βασίλειος
ΑΜ: 19390104

Άσκηση 1) : Μέσω του vi δημιουργήστε ένα αρχείο με το όνομα grades που να περιλαμβάνει περίπου 15
εγγραφές της παρακάτω μορφής: (οι στήλες κατά σειρά αντιστοιχούν σε Όνομα, Επώνυμο,
Κατεύθυνση, Βαθμός_1, Βαθμός_2, Βαθμός_3, Βαθμός_4, με την κατεύθυνση να παίρνει τιμές
Texn, Thet, Theo και τους βαθμούς να κυμαίνονται μεταξύ 0 και 100).
Να δοθούν οι 'awk' εντολές που επιστρέφουν για το αρχείο grades:

	1. Ποιών ατόμων το όνομα αρχίζει από K ή N (τυπώνεται επώνυμο και μετά όνομα)

	 Απάντηση: Θα χρησιμοποιήσω την awk με φίλτρο ^Κ|^Ν και υστερα το εκτυπώνω πρωτα την δευτερη στήλη μετα όλες τις αλλες
	 Εντολή >> awk '/^K|^N/ {print $2","$1","$3","$4","$5","$6}' grades

	2. Ποιών ατόμων το επώνυμο αρχίζει από C μέχρι L (τυπώνεται όνομα και μετά επώνυμο)

	 Απάντηση: Ψάχνω για την στήλη 2 (Επώνυμο) να ταιριάζει (~) να έχει αρχή απο C εως L ( ^[C-L] )
	 Εντολή >> awk '$2 ~ /^[C-L]/ {print $0}' grades 

	3. Ποια άτομα έχουν τον 2ο και τον 4ο βαθμό μεγαλύτερα του 85 (να τυπώνονται όλα τα στοιχεία)

	 Απάντηση:Ψάχνω για τις στήλες 5,7 αν είναι μεγαλυτερες απο το 85 και εκτυπώνω 
	 Εντολή >> awk '$5 > 85 && $7 > 85 {print $0}' grades

	4. Ποιοι μαθητές είναι της θεωρητικής κατεύθυνσης (να τυπώνονται όλα τα στοιχεία)

	 Απάντηση: Ψάχνω για την 3η στήλη εάν περιέχει το string "Theo" και άν ναι την εμφανίζω
	 Εντολή >> awk '$3 ~ /Theo/ {print $0}' grades  /////Redi awk '$3=="Theo" {print}' grades

	5. Το όνομα, το επώνυμο και μετά το μέσο όρο των τεσσάρων βαθμών.

	 Απάντηση: Αρχικοποιώ την μεταβλητή sum=0 υστερα υπολογιζω sum της γραμμης και μετα βρίσκω τον Μ.Ο και το εμφανίζω για κάθε γραμμή.
	 Εντολή >> awk '{sum=0;} {sum+=$4+$5+$6+$7;} {avg=sum/4;} {printf "Name: %s\tLastname: %s\t Average: %0.2f\n",$1,$2,avg;}' grades
	///redi   awk '{sum=0} {sum+=$4+$5+$6+$7} {avg=sum/4} {print "Name= "$1" ""Last_Name= "$2" ""Average= "avg }' grades

	6. Πόσα άτομα έχουν τον τρίτο βαθμό μικρότερο του 70 

	 Απάντηση: Ελέγχω αν η στήλη 6 είναι < 70 αν ναί τυπώνω την γραμμή.
	 Εντολή >> awk '$6 < 70 {print $0}' grades 

	7. Πόσων ατόμων το επώνυμο τελειώνει σε is.

	 Απάντηση: Ψάχνω στην στηλη 2 αν τελειωνει με το pattern "is" αν ναί τυπώνω την γραμμή
	 Εντολή >> awk '$2 ~ /is$/ {print $0}' grades

Άσκηση 2) : Γράψτε awk script το οποίο αφού εφαρμοστεί στο αρχείο grades να παράγει το αρχείο students
το οποίο θα περιέχει καταχωρήσεις της μορφής:
Student 1, Thomas Georgiou, ……..
Student 2, Mary Makridi, ……..
Student 3, Nick Aliferis, ……..
Όπου στη θέση των τελειών θα τοποθετείται ο μέσος όρος ανά φοιτητή. Δώστε επίσης την
εντολή η οποία θα ταξινομεί το students κατά μέσο όρο.

Απάντηση: Υπολογίζω τον Μ.Ο για καθε γραμμη και τα κανω ανακατευθυνση στο students 
Script >>
#!/usr/bin/awk -f
{sum=0}
{sum+= $4+$5+$6+$7} {avg=sum/4}
{print "Student "NR", "$1" "$2" ""Average= "avg > "students"}

Εντολή ταξινόμησης κατά τον Μ.Ο >> cat students | sort -k 6 (οπου 6 η στήλη του Μ.Ο)

Ασκηση 3) : Γράψτε awk script το οποίο αφού εφαρμοστεί στο αρχείο grades να τυπώνει το μέσο όρο ανά
μάθημα για κάθε ένα από τα τέσσερα μαθήματα

Απάντηση: Αρχικοποιώ ενα sum για καθε στηλη και υστερα το υπολογιζω και τελος εμφανίζω το sum της καθε στηλης δια του NR
Script >> 
#!/usr/bin/awk -f
BEGIN {sum1 = 0} {sum2 = 0} {sum3 = 0} {sum4 = 0}  {sum1 += $4} {sum2 += $5}  {sum3 += $6} {sum4 += $7} 
END {printf "Subject 1 Avg = %0.3f\nSubject 2 Avg = %0.3f\nSubject 3 Avg = %0.3f\nSubject 4 Avg = %0.3f\n", sum1/NR,sum2/NR,sum3/NR,sum4/NR;} 

Άσκηση 4) :Δημιουργήστε ένα αρχείο απλού κειμένου με το όνομα textfile που να περιέχει λέξεις έτσι ώστε
η κάθε γραμμή του να περιέχει διαφορετικό αριθμό λέξεων. Γράψτε awk script το οποίο
δεχόμενο ως είσοδο το αρχείο textfile θα τυπώνει τα περιεχόμενα του με ΑΝΑΠΟΔΗ ΣΕΙΡΑ

Απάντηση: Κάνω μια for με την χρήση του NF διατρέχοντας ανάποδα κάθε γραμμή 
Script >> #!/usr/bin/awk -f
{ for(i=NF;i>0;i--){
        printf "%s ",$i; 
    }printf "\n";
 }

Άσκηση 5) :Γράψτε μία awk εντολή η οποία να εμφανίζει το άθροισμα των μεγεθών όλων των αρχείων
(μόνο των αρχείων) του καταλόγου στον οποίο δουλεύετε. 

Απάντηση: περνω με ls -la φιλτράρω με 2 grep για να αποφύγω το total και να είναι μόνο αρχεία και τέλος τα στέλνω σε μια awk όπου εχω ενα sum το υπολογίζω και το εμφανίζω.
Εντολή >> ls- la | grep -v "^total" | grep '^[-]' | awk 'BEGIN {sum=0;} {sum+=$5;} END {print sum;}'

Άσκηση 6) :Δημιουργείστε το αρχείο κειμένου ekloges το οποίο να περιέχει 15 γραμμές της μορφής:
Karydhs y n y y y n n y n n n y n y n n
Markopoulos y y n n n y n y n y y n n n y
όπου κάθε γραμμή αντιστοιχεί σε έναν υποψήφιο κάποιων εκλογών και περιέχει το όνομά του
και τις θετικές (‘y’) και αρνητικές (‘n’) ψήφους τις οποίες έλαβε κατά τις εκλογές αυτές με
συνολικό αριθμό ψήφων 15. Γράψτε ένα awk script το οποίο να εφαρμόζεται στο αρχείο
ekloges και να τυπώνει το όνομα του υποψήφιου που κέρδισε τις εκλογές (αυτού δηλαδή που
έλαβε τις περισσότερες θετικές ψήφους).

Απάντηση:Στο πρώτο σκέλος του κώδικα βρίσκω το σύνολο των ψήφων για κάθε υποψήφιο και στο δεύτερο αφού έχω τον κάθε ψήφο σε πίνακα
βρίσκω αυτόν με τον μεγαλύτερο ψήφο τον εκτυπώνω. 
Εντολή >> {
    count=0;
    for(i=2;i<= NF;i++){ if($i =="y"){ count++;} }
    psifoi[NR]=count; 
    onomata[NR]=$1;
}
END{  max=psifoi[2];  onNik=2;
    for(i=3;i<= FNR;i++){ if(max<psifoi[i]){max=psifoi[i]; onNik=i; }}
    print onomata[onNik];
}

Ασκηση 7) : Να δοθεί η κατάλληλη awk εντολή που να είναι ισοδύναμη της εντολής grep -c ^str file όπου
το str θεωρείστε ότι είναι ένα οποιοδήποτε συγκεκριμένο αλφαριθμητικό και το file θεωρείστε
ότι είναι ένα οποιοδήποτε υπάρχον (συγκεκριμένο) αρχείο.

Απάντηση: Η εντολή grep -c ^<random 3 letter string> <random file> ψαχνει για να βρεί τις γραμμές που ξεκινάνε με <random string και υστερα τυπώνει το πλήθος τους.
Με την παρακάτω εντολή βρισκω με την awk τις γραμμες που ξεκινανε με <random string> μεσα στο <random file> και τα στέλνω σε μια wc -l για να δώ το πλήθος των γραμμών 
Εντολή >> awk '$1 ~ /^<random string>/ ' <random file> | wc -l
[Τα random string & random file μπορει να ειναι οτιδήποτε]

Άσκηση 7.1) : Προσπαθήστε να επεκτείνετε την εντολή που φτιάξατε παραπάνω σε ένα αντίστοιχο shell script
το οποίο θα επιτελεί (με χρήση της awk) την ίδια δουλειά, για τιμές ωστόσο των str, file που θα
ζητούνται με κατάλληλη εντολή να τις δώσει εκείνη την ώρα ο χρήστης

Απάντηση: Αρχικοποιώ ενα counter  και ψάχνω το $1 που εχει δωσει ο χρηστης στο begin αυξάνω τον counter για καθε line που ταιριαζει και στο END τα εκτυπώνω και στο τέλος με $2 δίνει ο χρήστης το αρχείο.
Script >>
#!/bin/bash
awk 'BEGIN {counter=0;}; /^'$1'/{counter ++;}END {printf "%d\n",counter; }' $2;
exit 0;







